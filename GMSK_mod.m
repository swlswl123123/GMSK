clear all; 
close all;

bit_rate = 16e6;  % 符号速率
T = 1/bit_rate;  % 符号时间

f_IF = 240e6; %射频频率
fs_IF = 1024e6;  % 射频、中频频信号采样速率
fs_BB = 128e6;  % 基带信号采样速率
num_bits_pulse = 3040; 
oversamp_BB = T * fs_BB;  % 基带信号过采样速率
oversamp_IF = T * fs_IF;  % 射频、中频信号过采样速率
T_s_BB = 1/fs_BB;  % 基带采样间隔

load('lib/g_1024.mat');  % GMSK调制 g函数 
load('lpf_coe.mat');  % 21个频点

% generate code

I_single = randi(2,1,num_bits_pulse);
I_single = I_single - 1;
I = 2*I_single - 1;
% I_single = [0,0,1,0,0,0,1,1,1,1];
% I = [-1,-1,1,-1,-1,-1,1,1,1,1];

% coding
bit_5 = zeros(1,5);
phi_last = 0;

for i = 1:num_bits_pulse
    if i == 1
        bit_5 = [-1,-1,I(i:i+2)];
    elseif i == 2
        bit_5 = [-1,I(i-1:i+2)];
    elseif i == num_bits_pulse-1
        bit_5 = [I(i-2:i+1),-1];
    elseif i == num_bits_pulse
        bit_5 = [I(i-2:i),-1,-1];
    else
        bit_5 = I(i-2:i+2);
    end

    [phi_last, I_sig, Q_sig, phi_int] = GMSK(bit_5, f_IF, phi_last, g);
    signal_trans_BB((i-1)*oversamp_IF+1:(i)*oversamp_IF) = complex(I_sig, Q_sig);
    phi_all((i-1)*oversamp_IF+1:(i)*oversamp_IF) = phi_int;
end
% figure;
% plot(mod(phi_all,2*pi))

% 射频信号

t = linspace(0, num_bits_pulse*T, oversamp_IF*num_bits_pulse);
signal_trans_IF = signal_trans_BB .* exp(1i*2*pi*f_IF*t);
% signal_trans_IF = exp(1i*2*pi*f_IF*t);
% plot(t, signal_trans_IF)
fre = t./(num_bits_pulse*T)*fs_IF;
% plot(fre, 20*log10(abs(fft(signal_trans_IF))))

% 加频偏

% signal_trans_IF = signal_trans_IF .* exp(1i*2*pi*0.001*f_IF*t);

% 接收端
% 加噪声
SNRdB = 100;
signal_recv_IF_noise = awgn(signal_trans_IF, SNRdB, 'measured');
% signal_recv_IF_noise = signal_trans_IF;
signal_recv_noise_IF_FFT = abs(fft(signal_recv_IF_noise));

plot(fre, 20*log10(signal_recv_noise_IF_FFT))
hold on;

% 理想带通滤波
IF_filter =[-5.40013781277669e-05,0.00114732075329323,9.44994183025024e-05,-0.000202380195962384,-2.39885730580212e-05,-0.000140243420854812,-0.000264786297518302,0.000677187432977161,0.000973834822155914,-0.00124135352980667,-0.00218767343347785,0.00158459883408995,0.00384566326720782,-0.00144370262633907,-0.00570360206635141,0.000644653388441763,0.00734904120054338,0.000785165419953769,-0.00828677848049580,-0.00253553414092192,0.00808333213537835,0.00400008826922803,-0.00654380756804225,-0.00436337246157386,0.00386000035364983,0.00277438121675754,-0.000691190271672809,0.00140654718632514,-0.00188192408496125,-0.00836788441631737,0.00253772573061608,0.0176636438872914,5.26235335527455e-06,-0.0281712196365636,-0.00664444065154319,0.0382133304089236,0.0175918945446722,-0.0458444311508772,-0.0321950450503257,0.0492464435223882,0.0489415921432228,-0.0471470461874748,-0.0656684574074548,0.0391545813510160,0.0799467592197247,-0.0259186628862056,-0.0895569598796935,0.00906898237136869,0.0929460999077881,0.00906898237136869,-0.0895569598796935,-0.0259186628862056,0.0799467592197247,0.0391545813510160,-0.0656684574074548,-0.0471470461874748,0.0489415921432228,0.0492464435223882,-0.0321950450503257,-0.0458444311508772,0.0175918945446722,0.0382133304089236,-0.00664444065154319,-0.0281712196365636,5.26235335527455e-06,0.0176636438872914,0.00253772573061608,-0.00836788441631737,-0.00188192408496125,0.00140654718632514,-0.000691190271672809,0.00277438121675754,0.00386000035364983,-0.00436337246157386,-0.00654380756804225,0.00400008826922803,0.00808333213537835,-0.00253553414092192,-0.00828677848049580,0.000785165419953769,0.00734904120054338,0.000644653388441763,-0.00570360206635141,-0.00144370262633907,0.00384566326720782,0.00158459883408995,-0.00218767343347785,-0.00124135352980667,0.000973834822155914,0.000677187432977161,-0.000264786297518302,-0.000140243420854812,-2.39885730580212e-05,-0.000202380195962384,9.44994183025024e-05,0.00114732075329323,-5.40013781277669e-05];

signal_recv_IF = filter(IF_filter,1,signal_recv_IF_noise);

% BandPass = zeros(size(fre));
% BandPass(round((f_IF-25e6)/fs_IF*oversamp_IF*num_bits_pulse):round((f_IF+25e6)/fs_IF*oversamp_IF*num_bits_pulse)) = 1;
% signal_recv_IF = ifft(BandPass.*fft(signal_recv_IF_noise));
% signal_recv_IF = signal_trans_IF;

plot(fre, 20*log10(abs(fft(signal_recv_IF))))

signal_recv_IF = signal_recv_IF.*exp(-1i*2*pi*f_IF*t);


plot(fre, 20*log10(abs(fft(signal_recv_IF))))

LP_filter = [-1.50606678313220e-06,1.31818664123990e-05,2.77839667897611e-05,4.18309284488732e-05,4.12137162346694e-05,1.19766832203480e-05,-5.14246117236080e-05,-0.000136580107428381,-0.000208909539789177,-0.000218538549120427,-0.000120170094425737,9.88234249264124e-05,0.000393913081213460,0.000657785994753693,0.000745281018027685,0.000529283735599063,-2.80884593245749e-05,-0.000818749794111519,-0.00158023744892206,-0.00195813603239020,-0.00163537954168375,-0.000491005593805058,0.00127551786102433,0.00312295487738181,0.00429276593356470,0.00406914053137522,0.00210069677808692,-0.00133844539522908,-0.00527808254227524,-0.00825482430637945,-0.00877711833586684,-0.00592835536584321,0.000103670336871479,0.00780339626709350,0.0145739519765251,0.0174688255601785,0.0142398801611481,0.00437846771738394,-0.0102333540178064,-0.0253717027690557,-0.0353320388845882,-0.0344471904328886,-0.0188581527582264,0.0120044367144507,0.0547371526923185,0.102379211915220,0.145899806826950,0.176389374450673,0.187345655905317,0.176389374450673,0.145899806826950,0.102379211915220,0.0547371526923185,0.0120044367144507,-0.0188581527582264,-0.0344471904328886,-0.0353320388845882,-0.0253717027690557,-0.0102333540178064,0.00437846771738394,0.0142398801611481,0.0174688255601785,0.0145739519765251,0.00780339626709350,0.000103670336871479,-0.00592835536584321,-0.00877711833586684,-0.00825482430637945,-0.00527808254227524,-0.00133844539522908,0.00210069677808692,0.00406914053137522,0.00429276593356470,0.00312295487738181,0.00127551786102433,-0.000491005593805058,-0.00163537954168375,-0.00195813603239020,-0.00158023744892206,-0.000818749794111519,-2.80884593245749e-05,0.000529283735599063,0.000745281018027685,0.000657785994753693,0.000393913081213460,9.88234249264124e-05,-0.000120170094425737,-0.000218538549120427,-0.000208909539789177,-0.000136580107428381,-5.14246117236080e-05,1.19766832203480e-05,4.12137162346694e-05,4.18309284488732e-05,2.77839667897611e-05,1.31818664123990e-05,-1.50606678313220e-06];

signal_recv_BB = filter(LP_filter,1,signal_recv_IF);

plot(fre, 20*log10(abs(fft(signal_recv_BB))))

signal_recv_BB_sample = signal_recv_BB(1:4:end);

figure
plot(fre(1:4:end)./4, 20*log10(abs(fft(signal_recv_BB_sample))))

LP_filter_2 = [0.00108879384560565,0.000533483986225582,0.000567289634068446,0.000520877202918833,0.000376239969468025,0.000125498445506841,-0.000227467761459136,-0.000663754812556181,-0.00114903174172796,-0.00163396675337064,-0.00205848361308039,-0.00235578826823406,-0.00246061353639870,-0.00231615348854708,-0.00188391231678358,-0.00115027027865301,-0.000134300877402450,0.00110965638733122,0.00249020578103872,0.00388413380240694,0.00514314028847442,0.00610704203214341,0.00661727742000240,0.00653529321858966,0.00575929354976851,0.00424245812378211,0.00200546594911398,-0.000854061106577502,-0.00416003525692736,-0.00766162902984072,-0.0110438202143498,-0.0139483610901379,-0.0160002971514431,-0.0168333438200462,-0.0161231468852071,-0.0136223502651461,-0.00917966860689556,-0.00276890331681498,0.00550200157683017,0.0153875463672568,0.0265116722054166,0.0383872271898231,0.0504435100570990,0.0620637012767823,0.0726247164449523,0.0815415092617778,0.0883072981567841,0.0925316680309938,0.0939677461661057,0.0925316680309938,0.0883072981567841,0.0815415092617778,0.0726247164449523,0.0620637012767823,0.0504435100570990,0.0383872271898231,0.0265116722054166,0.0153875463672568,0.00550200157683017,-0.00276890331681498,-0.00917966860689556,-0.0136223502651461,-0.0161231468852071,-0.0168333438200462,-0.0160002971514431,-0.0139483610901379,-0.0110438202143498,-0.00766162902984072,-0.00416003525692736,-0.000854061106577502,0.00200546594911398,0.00424245812378211,0.00575929354976851,0.00653529321858966,0.00661727742000240,0.00610704203214341,0.00514314028847442,0.00388413380240694,0.00249020578103872,0.00110965638733122,-0.000134300877402450,-0.00115027027865301,-0.00188391231678358,-0.00231615348854708,-0.00246061353639870,-0.00235578826823406,-0.00205848361308039,-0.00163396675337064,-0.00114903174172796,-0.000663754812556181,-0.000227467761459136,0.000125498445506841,0.000376239969468025,0.000520877202918833,0.000567289634068446,0.000533483986225582,0.00108879384560565];

signal_recv_BB_sample_2 = filter(LP_filter_2,1,signal_recv_BB_sample);

figure;
plot(fre(1:4:end)./4, 20*log10(abs(fft(signal_recv_BB_sample_2))))

signal_recv_BB_sample_3 = signal_recv_BB_sample_2(1:4:end);

figure;
plot(fre(1:16:end)./16, 20*log10(abs(fft(signal_recv_BB_sample_3))))


% 非相干译码
decode = zeros(size(I));
for i = 1:num_bits_pulse
% for i = 1:2
    signal_recv = signal_recv_BB_sample_3(1+(i-1)*oversamp_IF/16:i*oversamp_IF/16);
    decode = GMSK_demod_new(signal_recv, decode, i, g);
end

error = I_single - decode;

error(error~=0) = 1;

error_rate = sum(error)/num_bits_pulse;




